From 80837257dff1ca448df451b6063c768c481a38a8 Mon Sep 17 00:00:00 2001
From: Pantelis Antoniou <panto@antoniou-consulting.com>
Date: Mon, 5 Aug 2013 22:44:09 +0300
Subject: [PATCH 09/26] arm: omap: Proper cleanups for omap_device

Removing any omap device always resulted in a crash; turns out
BUS_NOTIFY_DEL_DEVICE is not the last notifier event sent in the
course of removing the device, the correct event is
BUS_NOTIFY_UNBOUND_DRIVER, which still is not the right place to
perform the cleanup. A device callback handles that properly, as
well as making sure the hwmods of the device are shutdown.

Signed-off-by: Pantelis Antoniou <panto@antoniou-consulting.com>
---
 arch/arm/mach-omap2/omap_device.c | 34 ++++++++++++++++++++++++++++++++--
 1 file changed, 32 insertions(+), 2 deletions(-)

diff --git a/arch/arm/mach-omap2/omap_device.c b/arch/arm/mach-omap2/omap_device.c
index 1b8be62..957cdf5 100644
--- a/arch/arm/mach-omap2/omap_device.c
+++ b/arch/arm/mach-omap2/omap_device.c
@@ -190,6 +190,32 @@ odbfd_exit:
 	return ret;
 }
 
+static void _omap_device_cleanup(struct device *dev)
+{
+	struct platform_device *pdev = to_platform_device(dev);
+	struct omap_device *od;
+	struct omap_hwmod *oh;
+	int i;
+
+	od = pdev->archdata.od;
+	if (!od)
+		return;
+
+	for (i = 0; i < od->hwmods_cnt; i++) {
+
+		oh = od->hwmods[i];
+
+		/* shutdown hwmods */
+		omap_hwmod_shutdown(oh);
+
+		/* we don't remove clocks cause there's no API to do so */
+		/* no harm done, since they will not be created next time */
+	}
+
+	/* cleanup the structure now */
+	omap_device_delete(od);
+}
+
 static int _omap_device_notifier_call(struct notifier_block *nb,
 				      unsigned long event, void *dev)
 {
@@ -197,9 +223,13 @@ static int _omap_device_notifier_call(struct notifier_block *nb,
 	struct omap_device *od;
 
 	switch (event) {
-	case BUS_NOTIFY_DEL_DEVICE:
+	case BUS_NOTIFY_UNBOUND_DRIVER:
+		/* NOTIFY_DEL_DEVICE is not the right call...
+		 * we use a callback here, to make sure no-one is going to
+		 * try to use the omap_device data after they're deleted
+		 */
 		if (pdev->archdata.od)
-			omap_device_delete(pdev->archdata.od);
+			device_schedule_callback(dev, _omap_device_cleanup);
 		break;
 	case BUS_NOTIFY_ADD_DEVICE:
 		if (pdev->dev.of_node)
-- 
1.8.5.1

